import 'package:flutter/services.dart';

import '../models/lift_sensor_model.dart';
import '../services/bluetooth.dart';
import 'global.dart';

class Messages {
  void sendSettingsRequest() async {
    sendWithQueue = true;
    Messages().message["machine"]!();
    Messages().message["seed"]!();
    Messages().message["fertilizer"]!();
    Messages().message["brachiaria"]!();
    Messages().message["velocity"]!();
    Messages().message["setMotors"]!();
    Messages().message["sensor"]!(LiftSensor().getSelectableOption());
    Messages().message['requestSettings']!();
    sendWithQueue = false;
  }

  Map<String, Function> message = {
    'manutence': () async {
      Bluetooth().send(
          0,
          0,
          99,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]),
          1);
    },
    'machine': () async {
      Bluetooth().send(
          0,
          0,
          24,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            machine['numberOfLines'],
            machine['spacing'],
          ]),
          1);
    },
    'seed': () async {
      Bluetooth().send(
          0,
          0,
          25,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            (seed['desiredRate'] * 10) ~/ 256.toInt(),
            ((seed['desiredRate'] * 10) % 256).toInt(),
            seed['numberOfHoles'],
            (seed['gearRatio'] * 1000) ~/ 256.toInt(),
            ((seed['gearRatio'] * 1000) % 256).toInt(),
          ]),
          1);
    },
    'fertilizer': () async {
      Bluetooth().send(
          0,
          0,
          27,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            (fertilizer['desiredRate']) ~/ 256.toInt(),
            ((fertilizer['desiredRate']) % 256).toInt(),
            (fertilizer['constantWeight'] * 10) ~/ 256.toInt(),
            ((fertilizer['constantWeight'] * 10) % 256).toInt(),
            (fertilizer['gearRatio'] * 1000) ~/ 256.toInt(),
            ((fertilizer['gearRatio'] * 1000) % 256).toInt(),
          ]),
          1);
    },
    'brachiaria': () async {
      Bluetooth().send(
          0,
          0,
          28,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            ((brachiaria['desiredRate'] * 10)).toInt(),
            (brachiaria['constantWeight'] * 100) ~/ 256.toInt(),
            ((brachiaria['constantWeight'] * 100) % 256).toInt(),
            (brachiaria['gearRatio'] * 1000) ~/ 256.toInt(),
            ((brachiaria['gearRatio'] * 1000) % 256).toInt(),
          ]),
          1);
    },
    'velocity': () async {
      Bluetooth().send(
          0,
          0,
          29,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            velocity['options'] == 3
                ? (velocity['speed'] * 10) ~/ 256.toInt()
                : 0,
            velocity['options'] == 3
                ? ((velocity['speed'] * 10) % 256).toInt()
                : 0,
            velocity['options'] == 1 || velocity['options'] == 2
                ? (velocity['errorCompensation'] + 20).toInt()
                : 20,
            velocity['options']
          ]),
          1);
    },
    'sensor': (int option) async {
      Bluetooth().send(
          0,
          0,
          31,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            option,
          ]),
          1);
    },
    'advanced': () async {
      Bluetooth().send(
          0,
          0,
          32,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            binaryStringToInt(
                '00${advancedSettings['motor50RPMBrachiaria'] ? 1 : 0}${advancedSettings['motor50RPMFertilizer'] ? 1 : 0}${advancedSettings['motor50RPMSeed'] ? 1 : 0}${advancedSettings['anticlockwiseBrachiaria'] ? 1 : 0}${advancedSettings['anticlockwiseFertilizer'] ? 1 : 0}${advancedSettings['anticlockwiseSeed'] ? 1 : 0}'),
          ]),
          1);
    },
    'setMotors': () async {
      Bluetooth().send(
          0,
          0,
          0,
          Uint8List.fromList([
            binaryStringToInt(
                '${brachiaria['setMotors'][0]}${brachiaria['setMotors'][1]}${brachiaria['setMotors'][2]}${fertilizer['setMotors'][0]}${fertilizer['setMotors'][1]}${fertilizer['setMotors'][2]}${fertilizer['setMotors'][3]}${fertilizer['setMotors'][4]}'),
            binaryStringToInt(
                '${fertilizer['setMotors'][5]}${seed['setMotors'][0]}${seed['setMotors'][1]}${seed['setMotors'][2]}${seed['setMotors'][3]}${seed['setMotors'][4]}${seed['setMotors'][5]}${seed['setMotors'][6]}'),
            binaryStringToInt(
                '${seed['setMotors'][7]}${seed['setMotors'][8]}${seed['setMotors'][9]}${seed['setMotors'][10]}${seed['setMotors'][11]}${brachiaria['setMotors'][3]}${brachiaria['setMotors'][4]}${brachiaria['setMotors'][5]}'),
            binaryStringToInt(
                '${fertilizer['setMotors'][6]}${fertilizer['setMotors'][7]}${fertilizer['setMotors'][8]}${fertilizer['setMotors'][9]}${fertilizer['setMotors'][10]}${fertilizer['setMotors'][11]}00'),
            binaryStringToInt(
                '${seed['setMotors'][12]}${seed['setMotors'][13]}${seed['setMotors'][14]}${seed['setMotors'][15]}${seed['setMotors'][16]}${seed['setMotors'][17]}${seed['setMotors'][18]}${seed['setMotors'][19]}'),
            binaryStringToInt(
                '${seed['setMotors'][20]}${seed['setMotors'][21]}${seed['setMotors'][22]}${seed['setMotors'][23]}${brachiaria['setMotors'][6]}${brachiaria['setMotors'][7]}${brachiaria['setMotors'][8]}${fertilizer['setMotors'][12]}'),
            binaryStringToInt(
                '${fertilizer['setMotors'][13]}${fertilizer['setMotors'][14]}${fertilizer['setMotors'][15]}${fertilizer['setMotors'][16]}${fertilizer['setMotors'][17]}${seed['setMotors'][24]}${seed['setMotors'][25]}${seed['setMotors'][26]}'),
            binaryStringToInt(
                '${seed['setMotors'][27]}${seed['setMotors'][28]}${seed['setMotors'][29]}${seed['setMotors'][30]}${seed['setMotors'][31]}${seed['setMotors'][32]}${seed['setMotors'][33]}${seed['setMotors'][34]}'),
            binaryStringToInt(
                '${seed['setMotors'][35]}${brachiaria['setMotors'][9]}${brachiaria['setMotors'][10]}${brachiaria['setMotors'][11]}${fertilizer['setMotors'][18]}${fertilizer['setMotors'][19]}${fertilizer['setMotors'][20]}${fertilizer['setMotors'][21]}'),
            binaryStringToInt(
                '${fertilizer['setMotors'][22]}${fertilizer['setMotors'][23]}${seed['setMotors'][36]}${seed['setMotors'][37]}${seed['setMotors'][38]}${seed['setMotors'][39]}${seed['setMotors'][40]}${seed['setMotors'][41]}'),
            binaryStringToInt(
                '${seed['setMotors'][42]}${seed['setMotors'][43]}${seed['setMotors'][44]}${seed['setMotors'][45]}${seed['setMotors'][46]}${seed['setMotors'][47]}${brachiaria['setMotors'][12]}${brachiaria['setMotors'][13]}'),
            binaryStringToInt(
                '${brachiaria['setMotors'][14]}${fertilizer['setMotors'][24]}${fertilizer['setMotors'][25]}${fertilizer['setMotors'][26]}${fertilizer['setMotors'][27]}${fertilizer['setMotors'][28]}${fertilizer['setMotors'][29]}${seed['setMotors'][48]}'),
            binaryStringToInt(
                '${seed['setMotors'][49]}${seed['setMotors'][50]}${seed['setMotors'][51]}${seed['setMotors'][52]}${seed['setMotors'][53]}${seed['setMotors'][54]}${seed['setMotors'][55]}${seed['setMotors'][56]}'),
            binaryStringToInt(
                '${seed['setMotors'][57]}${seed['setMotors'][58]}${seed['setMotors'][59]}00000'),
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
          ]),
          1);
    },
    'stopMotors': () async {
      Bluetooth().send(
          0,
          0,
          1,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
          ]),
          1);
    },
    'startMotors': () async {
      Bluetooth().send(
          0,
          0,
          1,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
          ]),
          1);
    },
    'fillDisk': (int onOff) async {
      Bluetooth().send(
          0,
          0,
          2,
          Uint8List.fromList([
            onOff,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
          ]),
          1);
    },
    'moduleAddressing': (int module) async {
      Bluetooth().send(
          0,
          0,
          39,
          Uint8List.fromList([
            module,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
          ]),
          1);
    },
    'motorAddressing': (int motor) async {
      Bluetooth().send(
          0,
          0,
          42,
          Uint8List.fromList([
            motor,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
          ]),
          1);
    },
    'requestSettings': () async {
      Bluetooth().send(
          0,
          0,
          47,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
          ]),
          1);
    },
    'antennaAndLiftSensorModule': () async {
      Bluetooth().send(
          0,
          0,
          45,
          Uint8List.fromList([
            module['antenna'],
            module['liftSensor'],
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
          ]),
          1);
    },
    'calibration': (int fillRotor, int mode) async {
      Bluetooth().send(
          0,
          0,
          34,
          Uint8List.fromList([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            calibration['RPMToCalibrate'].toInt(),
            calibration['numberOfLaps'].toInt(),
            fillRotor,
            mode == 1
                ? fertilizer['addressedLayout']
                    [calibration['motorNumber'].toInt() - 1]
                : brachiaria['addressedLayout']
                    [calibration['motorNumber'].toInt() - 1],
          ]),
          1);
    },
  };
}
